<?php

namespace Hn\UserBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Security\Core\User\UserInterface;

/**
 * Users
 *
 * @ORM\Table(name="users")
 * @ORM\Entity(repositoryClass="Hn\UserBundle\Repository\UserRepository")
 */
class Users implements UserInterface
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;

    /**
     * @var integer
     *
     * @ORM\Column(name="user_type", type="integer", nullable=false)
     */
    private $userType = '10';

    /**
     * @var string
     *
     * @ORM\Column(name="user_name", type="string", length=100, nullable=false)
     */
    private $username;

    /**
     * @var string
     *
     * @ORM\Column(name="password", type="string", length=100, nullable=false)
     */
    private $password;

    /**
     * @var string
     *
     * @ORM\Column(name="salt", type="string", length=255, nullable=true)
     */
    private $salt;

    /**
     * @var string
     *
     * @ORM\Column(name="nickname", type="string", length=50, nullable=true)
     */
    private $nickname;

    /**
     * @var string
     *
     * @ORM\Column(name="mobile", type="string", length=30, nullable=true)
     */
    private $mobile;

    /**
     * @var string
     *
     * @ORM\Column(name="email", type="string", length=100, nullable=true)
     */
    private $email;

    /**
     * @var string
     *
     * @ORM\Column(name="address", type="string", length=255, nullable=true)
     */
    private $address;

    /**
     * @var integer
     *
     * @ORM\Column(name="user_degree", type="integer", nullable=true)
     */
    private $userDegree = '10';

    /**
     * @var integer
     *
     * @ORM\Column(name="user_resouce", type="integer", nullable=true)
     */
    private $userResouce;

    /**
     * @var string
     *
     * @ORM\Column(name="user_sn", type="string", length=50, nullable=true)
     */
    private $userSn;

    /**
     * @var string
     *
     * @ORM\Column(name="user_desc", type="string", length=255, nullable=true)
     */
    private $userDesc;

    /**
     * @var integer
     *
     * @ORM\Column(name="gender", type="integer", nullable=true)
     */
    private $gender = '0';

    /**
     * @var integer
     *
     * @ORM\Column(name="birthday", type="integer", nullable=true)
     */
    private $birthday;

    /**
     * @var string
     *
     * @ORM\Column(name="avatar", type="string", length=255, nullable=true)
     */
    private $avatar;

    /**
     * @var string
     *
     * @ORM\Column(name="qq_no", type="string", length=50, nullable=true)
     */
    private $qqNo;

    /**
     * @var string
     *
     * @ORM\Column(name="weibo_no", type="string", length=50, nullable=true)
     */
    private $weiboNo;

    /**
     * @var string
     *
     * @ORM\Column(name="weixin_no", type="string", length=50, nullable=true)
     */
    private $weixinNo;

    /**
     * @var integer
     *
     * @ORM\Column(name="is_auth", type="integer", nullable=true)
     */
    private $isAuth = '0';

    /**
     * @var string
     *
     * @ORM\Column(name="realname", type="string", length=50, nullable=true)
     */
    private $realname;

    /**
     * @var integer
     *
     * @ORM\Column(name="last_login_time", type="integer", nullable=true)
     */
    private $lastLoginTime;

    /**
     * @var integer
     *
     * @ORM\Column(name="state", type="integer", nullable=true)
     */
    private $state = '1';

    /**
     * @var integer
     *
     * @ORM\Column(name="oper_id", type="integer", nullable=true)
     */
    private $operId;

    /**
     * @var integer
     *
     * @ORM\Column(name="create_time", type="integer", nullable=false)
     */
    private $createTime;

    /**
     * @var integer
     *
     * @ORM\Column(name="update_time", type="integer", nullable=false)
     */
    private $updateTime;

    /**
     * @var string
     *
     * @ORM\Column(name="comment", type="string", length=255, nullable=true)
     */
    private $comment;

    /**
     * @var string
     *
     * @ORM\Column(name="roles", type="text", nullable=true)
     */
    private $roles;

    /**
     * @ORM\Column(name="is_active", type="boolean")
     */
    private $isActive;


    public function __construct()
    {
        $this->isActive = true;

        $this->salt = md5(uniqid(null, true));
    }

    public function getUsername()
    {
        return $this->username;
    }

    public function getSalt()
    {
        return null;
    }

    public function getPassword()
    {
        return $this->password;
    }

    public function getRoles()
    {
        return array('ROLE_USER');
    }

    public function eraseCredentials()
    {
    }











}

